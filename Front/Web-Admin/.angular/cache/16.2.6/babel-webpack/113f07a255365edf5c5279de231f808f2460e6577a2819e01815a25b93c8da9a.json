{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nexport let CreateDeliveryComponent = class CreateDeliveryComponent {\n  constructor(_formBuilder, deliveryService, router, packageService) {\n    this._formBuilder = _formBuilder;\n    this.deliveryService = deliveryService;\n    this.router = router;\n    this.packageService = packageService;\n    this.title = 'Web Admin - Create Delivery';\n    this.packageIds = [];\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.packageService.getAll().subscribe(packages => {\n      // this.packageIds = packages.data.map((package) => ({package._id,\n      // }));\n      console.log(packages);\n    });\n    this.deliveryForm = this._formBuilder.group({\n      package_id: ['', Validators.required],\n      lat: ['', Validators.required],\n      lng: ['', Validators.required]\n    });\n  }\n  newDelivery() {\n    if (this.deliveryForm.invalid) {\n      return;\n    }\n    let data = {\n      package_id: this.deliveryForm.controls['package_id'].value,\n      location: {\n        type: \"Point\",\n        coordinates: [this.deliveryForm.controls['lat'].value, this.deliveryForm.controls['lng'].value]\n      }\n    };\n    this.deliveryService.createDelivery(data).subscribe(res => {\n      console.log(res);\n      alert(\"Delivery Created Successfully\");\n      this.submitted = true;\n      this.router.navigate(['/']);\n    }, error => {\n      console.log(error);\n    });\n  }\n  saveDelivery() {\n    this.submitted = false;\n    this.newDelivery();\n  }\n};\nCreateDeliveryComponent = __decorate([Component({\n  selector: 'app-create-delivery',\n  templateUrl: './create-delivery.component.html',\n  styleUrls: ['./create-delivery.component.css']\n})], CreateDeliveryComponent);","map":{"version":3,"names":["Component","Validators","CreateDeliveryComponent","constructor","_formBuilder","deliveryService","router","packageService","title","packageIds","submitted","ngOnInit","getAll","subscribe","packages","console","log","deliveryForm","group","package_id","required","lat","lng","newDelivery","invalid","data","controls","value","location","type","coordinates","createDelivery","res","alert","navigate","error","saveDelivery","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/mazarine/Rendu/Package Tracker/Front/Web-Admin/src/app/create-delivery/create-delivery.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Delivery} from \"../shared/models/delivery.model\";\nimport {DeliveryService} from \"../shared/services/delivery/delivery.service\";\nimport { PackageService } from \"../shared/services/package/package.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-delivery',\n  templateUrl: './create-delivery.component.html',\n  styleUrls: ['./create-delivery.component.css']\n})\nexport class CreateDeliveryComponent implements OnInit {\n  title = 'Web Admin - Create Delivery';\n\n  packageIds: string[] = [];\n\n  deliveryForm: FormGroup\n\n  submitted = false;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private deliveryService: DeliveryService,\n    private router: Router,\n    private packageService: PackageService\n    ) {}\n\n    ngOnInit() {\n      this.packageService.getAll().subscribe((packages) => {\n        // this.packageIds = packages.data.map((package) => ({package._id,\n        // }));\n        console.log(packages);\n      });\n      this.deliveryForm = this._formBuilder.group({\n        package_id: ['', Validators.required],\n        lat: ['', Validators.required],\n        lng: ['', Validators.required],\n      });\n        \n    }\n\nnewDelivery(){\n  if (this.deliveryForm.invalid){\n    return;\n  }\n\n  let data : Delivery = {\n    package_id: this.deliveryForm.controls['package_id'].value,\n    location: {\n      type: \"Point\",\n      coordinates: [this.deliveryForm.controls['lat'].value, this.deliveryForm.controls['lng'].value]\n    },\n  };\n\n  this.deliveryService.createDelivery(data).subscribe(\n    (res) => {\n      console.log(res);\n      alert(\"Delivery Created Successfully\");\n      this.submitted = true;\n      this.router.navigate(['/']);\n    },\n    (error) => {\n      console.log(error);\n    }\n  );\n}\n\nsaveDelivery(): void {\n  this.submitted = false;\n  this.newDelivery();\n}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EASlCC,YACUC,YAAyB,EACzBC,eAAgC,EAChCC,MAAc,EACdC,cAA8B;IAH9B,KAAAH,YAAY,GAAZA,YAAY;IACZ,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;IAZxB,KAAAC,KAAK,GAAG,6BAA6B;IAErC,KAAAC,UAAU,GAAa,EAAE;IAIzB,KAAAC,SAAS,GAAG,KAAK;EAOZ;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACJ,cAAc,CAACK,MAAM,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MAClD;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;IACF,IAAI,CAACG,YAAY,GAAG,IAAI,CAACb,YAAY,CAACc,KAAK,CAAC;MAC1CC,UAAU,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACmB,QAAQ,CAAC;MACrCC,GAAG,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACmB,QAAQ,CAAC;MAC9BE,GAAG,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACmB,QAAQ;KAC9B,CAAC;EAEJ;EAEJG,WAAWA,CAAA;IACT,IAAI,IAAI,CAACN,YAAY,CAACO,OAAO,EAAC;MAC5B;;IAGF,IAAIC,IAAI,GAAc;MACpBN,UAAU,EAAE,IAAI,CAACF,YAAY,CAACS,QAAQ,CAAC,YAAY,CAAC,CAACC,KAAK;MAC1DC,QAAQ,EAAE;QACRC,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE,CAAC,IAAI,CAACb,YAAY,CAACS,QAAQ,CAAC,KAAK,CAAC,CAACC,KAAK,EAAE,IAAI,CAACV,YAAY,CAACS,QAAQ,CAAC,KAAK,CAAC,CAACC,KAAK;;KAEjG;IAED,IAAI,CAACtB,eAAe,CAAC0B,cAAc,CAACN,IAAI,CAAC,CAACZ,SAAS,CAChDmB,GAAG,IAAI;MACNjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAAC;MAChBC,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACvB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACJ,MAAM,CAAC4B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACAC,KAAK,IAAI;MACRpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAC,YAAYA,CAAA;IACV,IAAI,CAAC1B,SAAS,GAAG,KAAK;IACtB,IAAI,CAACa,WAAW,EAAE;EACpB;CAEC;AA7DYrB,uBAAuB,GAAAmC,UAAA,EALnCrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWtC,uBAAuB,CA6DnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}