{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiUrl = 'http://localhost:5000/api/delivery';\nexport class DeliveryService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(apiUrl);\n  }\n  getDeliveryById(delivery_id) {\n    return this.http.get(`${apiUrl}/${delivery_id}`);\n  }\n  createDelivery(data) {\n    return this.http.post(apiUrl, data);\n  }\n  updateDelivery(delivery_id, data) {\n    return this.http.put(`${apiUrl}/${delivery_id}`, data);\n  }\n  deleteDelivery(delivery_id) {\n    return this.http.delete(`${apiUrl}/${delivery_id}`);\n  }\n  static #_ = this.ɵfac = function DeliveryService_Factory(t) {\n    return new (t || DeliveryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DeliveryService,\n    factory: DeliveryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["apiUrl","DeliveryService","constructor","http","getAll","get","getDeliveryById","delivery_id","createDelivery","data","post","updateDelivery","put","deleteDelivery","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/mazarine/Rendu/Package Tracker/Front/Web-Admin/src/app/shared/services/delivery/delivery.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Delivery } from '../../models/delivery.model'; \n\nconst apiUrl = 'http://localhost:5000/api/delivery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Delivery[]> {\n    return this.http.get<Delivery[]>(apiUrl);\n  }\n\n  getDeliveryById(delivery_id: any): Observable<Delivery> {\n    return this.http.get<Delivery>(`${apiUrl}/${delivery_id}`);\n  }\n\n  createDelivery(data: any): Observable<Delivery> {\n    return this.http.post<Delivery>(apiUrl, data);\n  }\n\n  updateDelivery(delivery_id: any, data: any): Observable<any> {\n    return this.http.put(`${apiUrl}/${delivery_id}`, data);\n  }\n\n  deleteDelivery(delivery_id: any): Observable<any> {\n    return this.http.delete(`${apiUrl}/${delivery_id}`);\n  }\n}\n"],"mappings":";;AAKA,MAAMA,MAAM,GAAG,oCAAoC;AAKnD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAaL,MAAM,CAAC;EAC1C;EAEAM,eAAeA,CAACC,WAAgB;IAC9B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,GAAGL,MAAM,IAAIO,WAAW,EAAE,CAAC;EAC5D;EAEAC,cAAcA,CAACC,IAAS;IACtB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAWV,MAAM,EAAES,IAAI,CAAC;EAC/C;EAEAE,cAAcA,CAACJ,WAAgB,EAAEE,IAAS;IACxC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,GAAGZ,MAAM,IAAIO,WAAW,EAAE,EAAEE,IAAI,CAAC;EACxD;EAEAI,cAAcA,CAACN,WAAgB;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CAAC,GAAGd,MAAM,IAAIO,WAAW,EAAE,CAAC;EACrD;EAAC,QAAAQ,CAAA,G;qBAtBUd,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfnB,eAAe;IAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}